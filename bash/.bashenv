# Shell settings
export TERM=xterm-256color

# Prompt
export PS1='[\u@\h \W]\$ '

# Locale settings
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

export CLASSPATH=$CLASSPATH:/usr/share/java/mysql.jar
export LOOPS_HOME=/srv/loops_home

# Gopath
export GOPATH="${HOME}/devel/gopath"
export GOBIN="${GOPATH}/bin"

# Create gopath if needed
if [[ ! -d "${GOPATH}" ]]; then
    mkdir -p "${GOPATH}/src"
    mkdir "${GOPATH}/bin"
    mkdir "${GOPATH}/pkg"
fi

# nvm
NVM_DIR="${HOME}/.nvm"
if [[ -e "${NVM_DIR}" ]]; then
    export NVM_DIR
    [[ -s "${NVM_DIR}/nvm.sh" ]] && source "${NVM_DIR}/nvm.sh"
fi

# Rust toolchain via rustup
CARGOPATH="${HOME}/.cargo"
if [[ -d "${CARGOPATH}" ]]; then
    export CARGOPATH
    CARGOBIN="${CARGOPATH}/bin"
    [[ -d "${CARGOBIN}" ]] && export CARGOBIN
fi

RABBITMQ_HOME=${HOME}/devel/rabbitmq_server-3.2.4

_asdf () {
    local cur=${COMP_WORDS[COMP_CWORD]}
    local cmd=${COMP_WORDS[1]}
    local prev=${COMP_WORDS[COMP_CWORD-1]}
    local plugins=$(asdf plugin-list | tr '\n' ' ')

    COMPREPLY=()

    case "$cmd" in
        plugin-update)
        COMPREPLY=($(compgen -W "$plugins --all" -- $cur))
        ;;
        plugin-remove|current|list|list-all)
        COMPREPLY=($(compgen -W "$plugins" -- $cur))
        ;;
        install)
        if [[ "$plugins" == *"$prev"* ]] ; then
            local versions=$(asdf list-all $prev)
            COMPREPLY=($(compgen -W "$versions" -- $cur))
        else
            COMPREPLY=($(compgen -W "$plugins" -- $cur))
        fi
        ;;
        uninstall|where|reshim)
        if [[ "$plugins" == *"$prev"* ]] ; then
            local versions=$(asdf list $prev)
            COMPREPLY=($(compgen -W "$versions" -- $cur))
        else
            COMPREPLY=($(compgen -W "$plugins" -- $cur))
        fi
        ;;
        *)
        local cmds='plugin-add plugin-list plugin-remove plugin-update install uninstall current where list list-all reshim'
        COMPREPLY=($(compgen -W "$cmds" -- $cur))
        ;;
    esac

    return 0
}

# Autocomplete
complete -cf sudo man which
complete -F _asdf asdf

# Aliases
alias ls='ls --color=auto'
alias ll='ls -la'

# Arch specific
if [[ -f "/etc/arch-release" ]]; then
    # Aliases
    alias yao='yaourt'
    alias pac='sudo pacman'
fi

if [ "${BASH_SOURCE[0]}" != "" ]; then
    script="${BASH_SOURCE[0]}"
else
    script="${0}"
fi
asdf=$(cd $(dirname $script) &> /dev/null; echo "${PWD}")

# ssh gui dialogue
export SSH_ASKPASS="/usr/bin/ksshaskpass"

# Show info about any unavailable
# commands run by user
# source /usr/share/doc/pkgfile/command-not-found.bash

# Update path variable
export PATH="${PATH}:/home/oasf/.nimble/bin:${asdf}/bin:${asdf}/shims:${GOBIN}:${CARGOBIN}:${RABBITMQ_HOME}/sbin"
