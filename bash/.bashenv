# Shell settings
export TERM=xterm-256color

# Prompt
export PS1='[\u@\h \W]\$ '

# Locale settings
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

# Gopath
export GOPATH="${HOME}/devel/gopath"
export GOBIN="${GOPATH}/bin"

# Create gopath if needed
if [ ! -d "${GOPATH}" ]; then
  mkdir -p "${GOPATH}/src"
  mkdir "${GOPATH}/bin"
  mkdir "${GOPATH}/pkg"
fi

# nvm
NVM_DIR="${HOME}/.nvm"
if [[ -e "${NVM_DIR}" ]]; then
    export NVM_DIR
    [[ -s "${NVM_DIR}/nvm.sh" ]] && source "${NVM_DIR}/nvm.sh"
fi

# Rust toolchain via rustup
CARGOPATH="${HOME}/.cargo"
if [[ -d "${CARGOPATH}" ]]; then
    export CARGOPATH

    CARGOBIN="${CARGOPATH}/bin"
    [[ -d "${CARGOBIN}" ]] && export CARGOBIN
fi

RUSTPATH=$(rustc --print sysroot)
if [[ -d "${RUSTPATH}" ]]; then
    export LD_LIBRARY_PATH="${RUSTPATH}"

    RUSTSRC="${RUSTPATH}/lib/rustlib/src/rust/src"
    if [[ -d "${RUSTSRC}" ]]; then
        export RUSTSRC
        export RUST_SRC_PATH="${RUSTSRC}"
    else
        echo "Error setting RUSTSRC: '${RUSTSRC}' is an invalid path."
    fi

    RLS_ROOT="${HOME}/devel/rust/rls"
    if [[ -d "${RLS_ROOT}" ]]; then
        export RLS_ROOT
    else
        echo "Error setting RLS_ROOT: '${RLS_ROOT}' is an invalid path."
    fi
fi

# Aliases
alias ls='ls --color=auto'
alias ll='ls -la'

# Autocomplete
complete -cf sudo man which

# Arch specific
if [ -f "/etc/arch-release" ]; then
  # Aliases
  alias yao='yaourt'
  alias yaono='yaourt --noconfirm'
  alias pac='sudo pacman'
  alias pacno='sudo pacman --noconfirm'

  # Show info about any unavailable
  # commands run by user
  # source /usr/share/doc/pkgfile/command-not-found.bash
fi

# Update path variable
export PATH="${PATH}:${GOBIN}:${CARGOBIN}"
