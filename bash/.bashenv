# Shell settings
export TERM=xterm-256color

# Prompt
export PS1='[\u@\h \W]\$ '

# Locale settings
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

# Gopath
export GOPATH="${HOME}/devel/gopath"
export GOBIN="${GOPATH}/bin"

# Create gopath if needed
if [ ! -d "${GOPATH}" ]; then
  mkdir -p "${GOPATH}/src"
  mkdir "${GOPATH}/bin"
  mkdir "${GOPATH}/pkg"
fi

# Install nvm
export NVM_DIR="${HOME}/.nvm"
[ -s "${NVM_DIR}/nvm.sh" ] && . "${NVM_DIR}/nvm.sh"

# Rust toolchain via rustup
export CARGOPATH="${HOME}/.cargo"
export CARGOBIN="${CARGOPATH}/bin"
RUSTPATH=$(rustc --print sysroot)
if [[ -e "${RUSTPATH}" ]]; then
    # Rust source code
    export RUSTSRC="${RUSTPATH}/lib/rustlib/src/rust/src"
    # Env vars for the toolchain
    export LD_LIBRARY_PATH="${RUSTPATH}"
    export RUST_SRC_PATH="${RUSTSRC}"
fi

# Aliases
alias ls='ls --color=auto'
alias ll='ls -la'

# Autocomplete
complete -cf sudo man which

# Arch specific
if [ -f "/etc/arch-release" ]; then
  # Aliases
  alias yao='yaourt'
  alias yaono='yaourt --noconfirm'
  alias pac='sudo pacman'
  alias pacno='sudo pacman --noconfirm'

  # Show info about any unavailable
  # commands run by user
  # source /usr/share/doc/pkgfile/command-not-found.bash
fi

# Update path variable
export PATH="${PATH}:${GOBIN}:${CARGOBIN}"
